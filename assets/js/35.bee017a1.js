(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{265:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"去掉已经托管到-git-上的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#去掉已经托管到-git-上的文件"}},[s._v("#")]),s._v(" 去掉已经托管到 git 上的文件")]),s._v(" "),t("p",[s._v("有不该提交的文件已经提交后，仅仅在 .gitignore 中加入忽略是不行的。这个时候需要执行:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -r --cached "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# . 可以是任意想忽略的文件路径 -r(recursive) 表示递归搜索每个文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'update .gitignore'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 任意提交信息")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"gitignore-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitignore-文件"}},[s._v("#")]),s._v(" .gitignore 文件")]),s._v(" "),t("p",[s._v("一个典型的 "),t("code",[s._v(".gitignore")]),s._v(" 文件如下:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("*.a       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略所有 .a 结尾的文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("lib.a    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但 lib.a 除外")]),s._v("\n/TODO     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO")]),s._v("\nbuild/    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略 build/ 目录下的所有文件")]),s._v("\ndoc/*.txt "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"其他匹配规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他匹配规则"}},[s._v("#")]),s._v(" 其他匹配规则")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("?")]),s._v("：代表任意的一个字符")]),s._v(" "),t("li",[t("code",[s._v("＊")]),s._v("：代表任意数目的字符")]),s._v(" "),t("li",[t("code",[s._v("{!ab}")]),s._v("：必须不是此类型")]),s._v(" "),t("li",[t("code",[s._v("{ab,bb,cx}")]),s._v("：代表ab,bb,cx中任一类型即可")]),s._v(" "),t("li",[t("code",[s._v("[abc]")]),s._v("：代表a,b,c中任一字符即可")]),s._v(" "),t("li",[t("code",[s._v("[ ^abc]")]),s._v("：代表必须不是a,b,c中任一字符")])]),s._v(" "),t("blockquote",[t("p",[s._v("添加 "),t("code",[s._v(".gitkeep")]),s._v(" 文件解决 git 不能追踪空目录问题")])]),s._v(" "),t("h2",{attrs:{id:"手动设置不要检查特定文件的更改情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动设置不要检查特定文件的更改情况"}},[s._v("#")]),s._v(" 手动设置不要检查特定文件的更改情况")]),s._v(" "),t("ul",[t("li",[s._v("暂时忽略某个文件不提交")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index --assume-unchanged path/to/some/dir\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("恢复被忽略的文件重新被版本控制")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index --no-assume-unchanged path/to/some/dir\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("em",[s._v("另外 git 还提供了另一种 exclude 的方式来做同样的事情，不同的是 .gitignore 这个文件本身会提交到版本库中去，用来保存的是公共的需要排除的文件。而 "),t("code",[s._v(".git/info/exclude")]),s._v(" 这里设置的则是你自己本地需要排除的文件。")]),s._v(" 他不会影响到其他人，也不会提交到版本库中去。")])])}),[],!1,null,null,null);a.default=n.exports}}]);